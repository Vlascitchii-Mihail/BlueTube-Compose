[versions]
#core
activity-compose = "1.9.0"
core-ktx = "1.13.1"
lifecycle-runtime-ktx = "2.8.0"

#ui
material = "1.6.7"
navigation = "2.8.0-beta05"
constraint-layout = "1.1.0-alpha13"

#dagger hilt
hilt = "2.49"
hilt-navigation = "1.2.0"

#retrofit
retrofit = "2.9.0"
okhttp3 = "4.12.0"
moshi = "1.14.0"
moshi-converter = "2.9.0"

#room
room = "2.6.1"

#paging
paging = "3.3.0"
paging-compose = "3.3.0"

glide = "1.0.0-beta01"
youtube-player = "12.1.0"
coroutines = "1.7.3"
lifecycle = "2.8.0"
livedata-runtime = "1.5.14"

#test
junit = "4.13.2"
androidx-test-ext = "1.1.5"
androidx-test-espresso = "3.5.1"
mockito = "3.2.0"
mockito-inline = "5.2.0"
mockito-kotlin-android = "3.2.0"
dexmaker = "2.28.1"
mockwebserver = "4.9.2"
coroutine-test = "1.8.1"
test-arch-core = "2.2.0"

#plugins
android-application = "8.2.2"
jetbrains-kotlin = "1.9.24"
serialization = "1.6.3"
ksp-compiler = "1.9.20-1.0.14"
navigation-testing = "2.7.7"
parcelize = "1.8.10"


[libraries]
#core
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle-runtime-ktx" }

#ui
ui = { module = "androidx.compose.ui:ui" }
ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
material3 = { module = "androidx.compose.material3:material3" }
androidx-material = { module = "androidx.compose.material:material", version.ref = "material" }
constraint_layout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraint-layout"}

livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle"}
livedata-runtime = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "livedata-runtime" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose"}

#coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

#navigation
navigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization"}

#dagger hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt"}
ksp-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt"}
hilt-navigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt-navigation"}

#retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
okhttp3 = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3"}
okhttp-urlconnection = { module = "com.squareup.okhttp3:okhttp-urlconnection", version.ref = "okhttp3"}
interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3"}
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi"}
moshi-converter = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "moshi-converter"}
moshi-compiler = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi"}
moshi-adapter = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi" }

#room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room"}

glide = { module = "com.github.bumptech.glide:compose", version.ref = "glide" }

#paging
paging = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging"}
paging-compose = {module = "androidx.paging:paging-compose", version.ref = "paging-compose"}

#YouTubePlayer
youtube-player = { module = "com.pierfrancescosoffritti.androidyoutubeplayer:core", version.ref = "youtube-player"}

#unit test
junit = { module = "junit:junit", version.ref = "junit"}
mockito = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito-inline" }
test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutine-test" }
#android tests
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
test-arch-core = { module = "androidx.arch.core:core-testing", version.ref = "test-arch-core" }
dexmaker = { module = "com.linkedin.dexmaker:dexmaker-mockito-inline", version.ref = "dexmaker"}
mockito-kotlin-android = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin-android" }
androidx-test-ext = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext" }
androidx-test-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso" }
#Dagger-Hilt Test
android-hilt-test = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
ksp-android-test = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt"}
#compose test
androidx-compose-ui-test = { module = "androidx.compose.ui:ui-test-junit4" }
navigation-compose-testing = { module = "androidx.navigation:navigation-testing", version.ref = "navigation-testing" }
compose-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }


[plugins]
android-application = { id = "com.android.application", version.ref = "android-application" }
jetbrains-kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "jetbrains-kotlin"}
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "activity-compose" }
ksp = { id =  "com.google.devtools.ksp", version.ref = "ksp-compiler" }
hilt-plugin = { id = "com.google.dagger.hilt.android", version.ref = "hilt"}
parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "parcelize" }

